Learned: git diff; git log; git clone; git checkout

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The + and - direct your eyes to the errors

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Seeing where things were changed along the way could avoid long
    searches for errors

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- you may mess up and not want to have that saved yet
    Con- you may forget to save and change too much, lose it, or not be able to read the commit easily later

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google docs more for human reading, git more for programming so the files will affect each other

How can you use the commands git log and git diff to view the history of files?

    * git log can be used to list the summaries of all the changes made to the repository.
	* git diff can be used to see what has actually changed between two given commits.

How might using version control make you more confident to make changes that
could break something?

    * You can try changing any critical features, since you can always revert back to the point when those were working correctly. If you find something is not working, you can git log, and try the previous versions until you find the one which works, and make diff of the last one that worked correctly and the commit following it. That result would show where and how the bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    Building code and sharing